#include <stdio.h>
#include <stdlib.h>
#define LEN 10000


int main(int argc, char *argv[]){
    fflush(stdout);
    puts("start");
    FILE *fp = fopen(argv[1], "r");
    
    int i;    
    int **grid = (int **)malloc(LEN * sizeof(int *)); 
    
    for (i=0; i<LEN; i++) {
         grid[i] = (int *)malloc(LEN * sizeof(int)); 
    }
    
    int x = LEN/2;
    int y = LEN/2;
    char ins;
    int len;
    int wire = 1;
    while(fscanf(fp, "%c", &ins) == 1){
        if(ins == '\n'){
            x = LEN/2;
            y = LEN/2;
            wire++;
        } else {
            fscanf(fp, "%d,", &len);
            int i;
            for(i = 0; i < len; i++){
                switch(ins){
                    case 'R':
                        if(grid[y][x] != wire){
                            grid[y][++x] += wire;
                        }
                        break;
                    case 'L':
                        if(grid[y][x] != wire){
                            grid[y][--x] += wire;
                        }
                        break;
                    case 'U':
                        if(grid[y][x] != wire){
                            grid[--y][x] += wire;
                        }
                        break;
                    case 'D':
                        if(grid[y][x] != wire){
                            grid[++y][x] += wire;
                        }
                        break;
                }
            }
        }
    }
    fclose(fp);
    int distance = 9999;
    for(y = 0; y < LEN; y++){
        for(x = 0; x < LEN; x++){
            if(grid[y][x] >= 3 && (y != LEN/2 && x != LEN/2)){
                int tempDistance = abs(x - LEN/2) + abs(y - LEN/2);
                if(tempDistance < distance){distance = tempDistance;}
            }
        }
    }
    printf("%d", distance);
}
